---
- name: Describe the fixed ELB
  command: aws elb describe-load-balancers --load-balancer-names {{elb_name}} --region {{aws_region}}
  register: fixed_elb_output

- name: Parse the result to json
  set_fact:
    fixed_elb_json: "{{fixed_elb_output.stdout | from_json }}"

- name: Describe the instance attached to the fixed elb
  command: aws ec2 describe-instances --instance-ids {{ fixed_elb_json.LoadBalancerDescriptions[0].Instances[0].InstanceId }} --region {{aws_region}}
  register: instance_result

- name: Parse the instance describe result to json
  set_fact:
    instance_result_json: "{{ instance_result.stdout| from_json }}"

- name: Get stack name from the instance describe output
  set_fact:
    stack_name: "{{ instance_result_json.Reservations[0].Instances[0].Tags | selectattr('Key', 'equalto', 'CF-Name') | map(attribute = 'Value') | join('')}}"

- name: Get all stacks
  command: aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE --region {{aws_region}}
  register: all_stack_output

- name: Parse the all stack result to json
  set_fact:
    all_stacks_json: "{{all_stack_output.stdout | from_json }}"

- name: Filter the target stacks
  vars:
    pattern: "^{{ application }}-.*(?:(?<!elb))$"
  set_fact:
    target_stacks: "{{all_stacks_json.StackSummaries | selectattr('StackName', 'match', pattern) | map(attribute='StackName') | list }}"

- name: Delete the filtered stacks
  command: aws cloudformation delete-stack --stack-name {{item}} --region {{aws_region}}
  with_items:
    - "{{target_stacks}}"
  when: target_stacks | length > 0 and item != stack_name and item != elb_name
